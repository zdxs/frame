<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    <!-- resources
        数据源配置
    -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}" />
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.username}" />
        <property name="password" value="${mysql.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${mysql.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${mysql.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${mysql.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${mysql.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${mysql.maxWait}"></property>
        <!-- 连接泄漏回收参数，当可用连接数少于3个时才执行 -->
        <property name="removeAbandoned" value="true" />
        <!-- 连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值 -->
        <property name="removeAbandonedTimeout" value="180" />
    </bean>
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/bufan/ssmredis/mapping/*Mapper.xml"></property>
        <!-- mybatis-config.xml留着还可以配置其他的东西 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
    </bean>
    <!--创建数据映射器，数据映射器必须为接口 mybatis-spring 自动扫描dao -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bufan.ssmredis.dao" />
    </bean>
    <!-- jdbc事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--事务模板 -->  
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager" ref="transactionManager" />
    </bean> 
    <!-- 创建一个sqlSession实例，线程安全的，可以在所有DAO实例共享，原理是将sqlSession，事务与当前线程挂钩 -->
    <bean name="sqlSessionTemplate" id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <!--配置通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="save*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="append*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="modify*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="edit*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="remove*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="init" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="delAndInit" propagation="REQUIRED"  rollback-for="Exception" />

            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="search*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="datagrid*" propagation="SUPPORTS" read-only="true" />

            <tx:method name="*" propagation="REQUIRED"  rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!--切面，针对于复杂业务放到service层处理，这样可以进行回滚操作-->
    <aop:config>
        <aop:pointcut expression="execution(public * com.bufan.ssmredis.service.*.*(..))" id="bussinessService" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService" />
    </aop:config>
    
</beans>

